/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

&left_encoder {
    resolution = <2>;
};

&right_encoder {
    resolution = <2>;
};

/ {
    macros {
        tm: tm {
            label = "TASK_MANAGER";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp ESC>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };
        slp: slp {
            label = "SLEEP";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp S>;
        };
        rst: rst {
            label = "RESTART";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp R>;
        };
        off: off {
            label = "SHUTDOWN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp U>;
        };
        ubt0: ubt0 {
            label = "USE_BLUE_TOOTH_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_tap>,
                <&bt BT_SEL 0>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(240,100,20)>;
        };
        ubt1: ubt1 {
            label = "USE_BLUE_TOOTH_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_tap>,
                <&bt BT_SEL 1>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(120,100,20)>;
        };
        ubt2: ubt2 {
            label = "USE_BLUE_TOOTH_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_tap>,
                <&bt BT_SEL 2>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(0,100,20)>;
        };

        // Windows alt code Special Characters        

        smfada_a: smfada_a {
            label = "SMALL_FADA_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };
        smfada_e: smfada_e {
            label = "SMALL_FADA_E";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };
        smfada_i: smfada_i {
            label = "SMALL_FADA_I";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;
        };
        smfada_o: smfada_o {
            label = "SMALL_FADA_O";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };
        smfada_u: smfada_u {
            label = "SMALL_FADA_U";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };
        tilden: tilden {
            label = "TILDE_N";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };
        lfada_a: lfada_a {
            label = "LARGE_FADA_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };
        lfada_e: lfada_e {
            label = "LARGE_FADA_E";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };
        lfada_i: lfada_i {
            label = "LARGE_FADA_I";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };
        lfada_o: lfada_o {
            label = "LARGE_FADA_O";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };
        lfada_u: lfada_u {
            label = "LARGE_FADA_U";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };
        ltilden: ltilden {
            label = "LARGE_TILDE_N";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };
        smlat_ae: smlat_ae {
            label = "SMALL_LATIN_AE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };
        lglat_ae: lglat_ae {
            label = "LARGE_LATIN_AE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        //Unicode Special Characters
        //Need regkey HKEY_CURRENT_USER\Control Panel\Input Method, REG_SZ EnableHexNumpad = 1

        us_cent: us_cent {
            label = "US_CENT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
        uk_pnd: uk_pnd {
            label = "UK_POUND";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };
        schwa: schwa {
            label = "SCHWA";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };
        darkl: darkl {
            label = "DARK_L";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
        ldarkl: ldarkl {
            label = "LARGE_DARK_L";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };
        smacute_c: smacute_c {
            label = "SMALL_ACUTE_C";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;
        };
        lacute_c: lacute_c {
            label = "LARGE_ACUTE_C";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };
        smacute_z: smacute_z {
            label = "SMALL_ACUTE_Z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp A>,
                <&macro_release>,
                <&kp LALT>;
        };
        lacute_z: lacute_z {
            label = "LARGE_ACUTE_Z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };
        smdot_z: smdot_z {
            label = "SMALL_DOT_Z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };
        ldot_z: ldot_z {
            label = "LARGE_DOT_Z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };
        smogo_a: smogo_a {
            label = "SMALL_OGONEK_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };
        logo_a: logo_a {
            label = "LARGE_OGONEK_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };
        smogo_e: smogo_e {
            label = "SMALL_OGONEK_E";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N1 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };
        logo_e: logo_e {
            label = "LARGE_OGONEK_E";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N1 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };
        smacute_n: smacute_n {
            label = "SMALL_ACUTE_N";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };
        lacute_n: lacute_n {
            label = "LARGE_ACUTE_N";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };
        smacute_s: smacute_s {
            label = "SMALL_ACUTE_S";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };
        lacute_s: lacute_s {
            label = "LARGE_ACUTE_S";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp A>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

//Combos, note that key listing is zero indexed
//lshift: 36
//rshift: 49

/ {
    combos {
        compatible = "zmk,combos";

        combo_cap_fada_a {
            timeout-ms = <200>;
            key-positions = <25 49>;
            bindings = <&lfada_a>;
        };

        combo_cap_fada_e {
            timeout-ms = <200>;
            key-positions = <15 49>;
            bindings = <&lfada_e>;
        };

        combo_cap_fada_i {
            timeout-ms = <200>;
            key-positions = <20 36>;
            bindings = <&lfada_i>;
        };

        combo_cap_fada_o {
            timeout-ms = <200>;
            key-positions = <21 36>;
            bindings = <&lfada_o>;
        };

        combo_cap_fada_u {
            timeout-ms = <200>;
            key-positions = <19 36>;
            bindings = <&lfada_u>;
        };

        combo_cap_acute_n {
            timeout-ms = <200>;
            key-positions = <36 44>;
            bindings = <&lacute_n>;
        };

        combo_cap_dark_l {
            timeout-ms = <200>;
            key-positions = <33 36>;
            bindings = <&ldarkl>;
        };

        combo_cap_acute_c {
            timeout-ms = <200>;
            key-positions = <39 49>;
            bindings = <&lacute_c>;
        };

        combo_cap_acute_z {
            timeout-ms = <200>;
            key-positions = <37 49>;
            bindings = <&lacute_z>;
        };

        combo_cap_acute_s {
            timeout-ms = <200>;
            key-positions = <26 49>;
            bindings = <&lacute_s>;
        };

        combo_sm_lat_ae {
            timeout-ms = <200>;
            key-positions = <15 25>;
            bindings = <&smlat_ae>;
        };

        combo_lg_lat_ae {
            timeout-ms = <200>;
            key-positions = <15 25 49>;
            bindings = <&lglat_ae>;
        };
    };
};

/ {
    behaviors {
        cc: cc {
            compatible = "zmk,behavior-tap-dance";
            label = "COLOR_CYCLE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&rgb_ug RGB_COLOR_HSB(0,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(10,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(35,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(120,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(240,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(285,100,20)>;
        };
        td_bt0: td_bt0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUE_TOOTH_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&bt BT_SEL 0>,
                <&ubt0>;
        };
        td_bt1: td_bt1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUE_TOOTH_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&bt BT_SEL 1>,
                <&ubt1>;
        };
        td_bt2: td_bt2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUE_TOOTH_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&bt BT_SEL 2>,
                <&ubt2>;
        };
        clcw: clcw {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_LOCK_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp CLCK>,
                <&caps_word>;
        };
        lscw: lscw {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LSHFT>,
                <&caps_word>;
        };
        rscw: rscw {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp RSHFT>,
                <&caps_word>;
        };
        stm: stm {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_TASK_MANAGER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LSHFT>,
                <&tm>;
        };
        pwr: pwr {
            compatible = "zmk,behavior-tap-dance";
            label = "POWER_COMMANDS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp RSHFT>,
                <&slp>,
                <&rst>,
                <&off>;
        };
        td_btr: td_btr {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUE_TOOTH_RELEASE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp ESC>,
                <&bt BT_CLR>;
        };
        pscode: pscode {
            compatible = "zmk,behavior-tap-dance";
            label = "POWER_SHELL_CODE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp F5>,
                <&kp F8>;
        };
        td_ll_l3: td_ll_l3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_LOWER_LAYER_LAYER_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&mo 1>,
                <&sl 3>;
        };
        td_rl_l3: td_rl_l3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_RAISE_LAYER_LAYER_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&mo 2>,
                <&sl 3>;
        };
        td_sp_z: td_sp_z {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SPECIAL_Z";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&smacute_z>,
                <&smdot_z>,
                <&ldot_z>;
        };
        td_sp_a: td_sp_a {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SPECIAL_A";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&smfada_a>,
                <&smogo_a>,
                <&logo_a>;
        };
        td_sp_e: td_sp_e {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SPECIAL_E";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&smfada_e>,
                <&smogo_e>,
                <&logo_e>;
        };
        td_sp_n: td_sp_n {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SPECIAL_N";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&smacute_n>,
                <&tilden>,
                <&ltilden>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        l0 {
            bindings = <
          &trans  &trans  &trans  &trans  &trans       &trans                                    &trans  &trans     &trans   &trans    &trans                   &trans
          &trans  &trans   &kp W   &kp F   &kp P       &trans                                    &trans   &kp L      &kp U    &kp Y    &trans                   &trans
&mt LEFT_GUI TAB   &kp A   &kp R   &kp S   &kp T        &kp G                                     &kp M   &kp N      &kp E    &kp I     &kp O  &mt RIGHT_GUI BACKSPACE
          &trans   &kp Z   &kp X   &kp C   &kp D        &kp V          &trans   &trans            &kp K   &kp H  &kp COMMA  &kp DOT  &kp FSLH                   &trans
                          &trans  &trans  &trans  &lt 1 SPACE  &kp LEFT_SHIFT  &kp RET  &lt 3 BACKSPACE  &trans     &trans   &trans
            >;

            label = "main";
        };

        l1 {
            bindings = <
&trans     &trans  &trans  &trans  &trans     &trans                            &trans           &trans     &trans     &trans     &trans    &trans
&trans     &trans  &kp N7  &kp N8  &kp N9     &trans                            &trans  &rgb_ug RGB_TOG     &trans     &trans     &trans    &trans
&trans   &kp SEMI  &kp N4  &kp N5  &kp N6  &kp EQUAL                      &out OUT_BLE         &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &kp BSLH
&trans  &kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH     &trans   &trans  &out OUT_USB         &kp HOME  &kp PG_DN  &kp PG_UP    &kp END    &trans
                   &trans  &trans  &trans     &kp N0  &kp MINUS  &kp RET      &kp BSPC           &trans     &trans     &trans
            >;
        };

        l2 {
            bindings = <
&trans         &trans        &trans         &trans         &trans        &trans                                 &trans    &trans    &trans  &trans     &trans  &trans
&trans         &trans  &kp LS(AMPS)   &kp LS(STAR)   &kp LS(LPAR)        &trans                            &kp LS(DEL)    &trans    &trans  &trans     &trans  &trans
&trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)                               &kp LEFT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &kp LS(TILDE)  &kp LS(EXCL)     &kp LS(AT)  &kp LS(POUND)  &kp LS(PIPE)         &trans     &trans       &trans    &trans    &trans  &trans     &trans  &trans
                             &trans         &trans         &trans  &kp LS(RPAR)  &kp LS(UNDER)  &kp MINUS     &kp FSLH    &trans    &trans  &trans
            >;
        };

        l3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans   &kp A   &kp B  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
